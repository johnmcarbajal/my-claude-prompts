#!/bin/bash
# gleam-utils - Utility functions for Gleam workflow

# Source this file or use individual functions

# Check if we're in a Gleam project
is_gleam_project() {
    [[ -f "gleam.toml" ]]
}

# Get current Gleam project name
get_gleam_project_name() {
    if is_gleam_project; then
        grep '^name' gleam.toml | cut -d'"' -f2 | head -1
    else
        echo "unknown"
    fi
}

# Check Gleam toolchain
check_gleam_toolchain() {
    echo "🔧 Gleam toolchain status:"
    
    if command -v gleam >/dev/null 2>&1; then
        echo "✅ Gleam: $(gleam --version)"
    else
        echo "❌ Gleam not installed"
    fi
    
    if command -v erl >/dev/null 2>&1; then
        echo "✅ Erlang: $(erl -eval 'erlang:display(erlang:system_info(otp_release)), halt().' -noshell)"
    else
        echo "❌ Erlang not installed"
    fi
    
    if command -v rebar3 >/dev/null 2>&1; then
        echo "✅ Rebar3: $(rebar3 --version)"
    else
        echo "ℹ️ Rebar3 not installed (optional)"
    fi
}

# Quick project health check
gleam_health_check() {
    echo "🏥 Gleam project health check:"
    
    if ! is_gleam_project; then
        echo "❌ Not a Gleam project (no gleam.toml)"
        return 1
    fi
    
    echo "✅ Valid Gleam project: $(get_gleam_project_name)"
    
    # Check if project compiles
    if gleam check >/dev/null 2>&1; then
        echo "✅ Project compiles successfully"
    else
        echo "❌ Compilation errors detected"
    fi
    
    # Check formatting
    if gleam format --check >/dev/null 2>&1; then
        echo "✅ Code is properly formatted"
    else
        echo "⚠️ Code formatting issues detected"
    fi
    
    # Check for tests
    if find . -name "*_test.gleam" -o -name "test/*.gleam" | grep -q "."; then
        echo "✅ Test files found"
        if gleam test >/dev/null 2>&1; then
            echo "✅ All tests passing"
        else
            echo "❌ Some tests failing"
        fi
    else
        echo "⚠️ No test files found"
    fi
}

# Clean up old handoff files
cleanup_handoffs() {
    local project_root="${1:-$(pwd)}"
    echo "🧹 Cleaning up old handoff files..."
    
    find "$project_root" -name ".gleam_handoff.json" -mtime +7 -delete 2>/dev/null || true
    find "$project_root/.gleam_context/handoffs" -name "*.json" -mtime +7 -delete 2>/dev/null || true
    
    echo "✅ Cleanup complete"
}

# Main utility runner
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    case "${1:-help}" in
        "check")
            check_gleam_toolchain
            echo ""
            gleam_health_check
            ;;
        "cleanup")
            cleanup_handoffs "${2:-$(pwd)}"
            ;;
        "project")
            if is_gleam_project; then
                echo "Project: $(get_gleam_project_name)"
            else
                echo "Not a Gleam project"
                exit 1
            fi
            ;;
        *)
            echo "Usage: gleam-utils {check|cleanup|project}"
            echo ""
            echo "Commands:"
            echo "  check   - Check toolchain and project health"
            echo "  cleanup - Clean up old handoff files"
            echo "  project - Get project information"
            ;;
    esac
fi
